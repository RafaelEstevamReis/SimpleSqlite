<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KIpicl5e/gINUNEyXp4LuQAAAABJRU5ErkJggg==
</value>
  </data>
</root>